{"version":3,"file":"static/js/726.bb750be0.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","pages/PhoneBook.jsx","../node_modules/@chakra-ui/layout/dist/chunk-6CSUKJP7.mjs"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectItems = state => state.contacts.items;\nexport const selectContacts = state => state.contacts?.queries['getContacts(undefined)']?.data;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector([selectFilter,selectContacts], (filter,contacts) => {\n    \n  if (filter === '') \n    return contacts;\n    \n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter)\n  );\n});\n  ","import { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\nimport { useSelector } from 'react-redux';\nimport * as contactsSelectors from 'redux/contacts/selectors';\nimport { Box, Button, Text } from '@chakra-ui/react';\n\nexport function ContactList() {\n  const [deleteContact] = useDeleteContactMutation();\n\n  const filteredContacts = useSelector(\n    contactsSelectors.selectFilteredContacts\n  );\n\n  return (\n    <Box as=\"ul\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n      <Box\n        width=\"300px\"\n        border=\"1px\"\n        borderColor=\"black\"\n        p={5}\n        borderRadius={4}\n      >\n        {filteredContacts.map((contact, index) => (\n          <Box\n            as=\"li\"\n            mb={4}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            bg=\"lightblue\"\n            p={2}\n            borderRadius={20}\n            boxShadow=\"dark-lg\"\n            rounded=\"md\"\n            _last={{\n              mb: 0,\n            }}\n            _hover={{\n              background: 'white',\n              color: 'teal.500',\n            }}\n            key={contact.id}\n          >\n            <Text fontWeight={500}>\n              {contact.name} {contact.phone}\n            </Text>\n            <Button\n              borderRadius=\"4\"\n              border=\"1px\"\n              borderColor=\"gray.500\"\n              _hover={{ background: 'teal' }}\n              onClick={() => deleteContact(contact.id)}\n            >\n              Delete\n            </Button>\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/filterSlice';\nimport { Text, Box } from '@chakra-ui/react';\n\nexport function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mb={8}>\n      <Text as=\"label\" fontSize={20} fontWeight=\"500\" display=\"box\" mb={4}>\n        Find contacts by name\n      </Text>\n      <Text\n        as=\"input\"\n        p={1}\n        border=\"1px\"\n        borderRadius={4}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </Box>\n  );\n}\n","import toast from 'react-hot-toast';\nimport { Button, Box, Text } from '@chakra-ui/react';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'redux/contacts/contactsSlice';\n\nexport function ContactForm() {\n  const [addContact] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const { name, mobile } = e.target.elements;\n    const form = e.currentTarget;\n\n    if (name.value === '' || mobile.value === '') {\n      toast.error('Введите имя или телефон');\n      return;\n    }\n\n    const isInList = contacts.some(\n      contact => contact.name.toLowerCase() === name.value.toLowerCase()\n    );\n\n    if (isInList) {\n      toast.error('Контакт уже есть в списке');\n      form.reset();\n      return;\n    }\n    await addContact({ name: name.value, phone: mobile.value });\n    toast.success('Успешно добавлен');\n    form.reset();\n  };\n\n  return (\n    <Box\n      p=\"15px\"\n      border=\"1px\"\n      borderColor=\"gray.500\"\n      borderRadius=\"4\"\n      width=\"300px\"\n      ml=\"auto\"\n      mr=\"auto\"\n      mb={4}\n    >\n      <form onSubmit={handleSubmit}>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <Text as=\"label\" fontSize={20} fontWeight=\"500\">\n            Name\n            <Text\n              as=\"input\"\n              p={2}\n              placeholder=\"John Smith\"\n              border=\"1px\"\n              borderRadius={4}\n              name=\"name\"\n              type=\"text\"\n              //value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            />\n          </Text>\n\n          <Text as=\"label\" fontSize={20} fontWeight=\"500\">\n            Number\n            <Text\n              as=\"input\"\n              p={2}\n              placeholder=\"112-15-841\"\n              border=\"1px\"\n              borderRadius={4}\n              name=\"mobile\"\n              type=\"tel\"\n              //value={mobile}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            />\n          </Text>\n          <br />\n          <Button\n            borderRadius=\"4\"\n            border=\"1px\"\n            borderColor=\"gray.500\"\n            _hover={{ background: 'teal' }}\n            type=\"submit\"\n          >\n            Add contact\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n}\n","import { ContactList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Text } from '@chakra-ui/react';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\n\nexport default function PhoneBook() {\n  const { data: contacts, isLoading } = useGetContactsQuery();\n\n  return (\n    <>\n      <section>\n        <Text fontSize=\"28\" textAlign=\"center\" mb={5}>\n          PhoneBook\n        </Text>\n        <ContactForm />\n      </section>\n      <section>\n        <Text fontSize=\"28\" textAlign=\"center\" mb={5}>\n          Contacts\n        </Text>\n        {isLoading && <b>Request in progress...</b>}\n        {contacts?.length > 0 && (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        )}\n      </section>\n    </>\n  );\n}\n","// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n"],"names":["selectFilter","state","filter","selectFilteredContacts","createSelector","contacts","queries","data","normalizedFilter","toLowerCase","contact","name","includes","ContactList","useDeleteContactMutation","deleteContact","filteredContacts","useSelector","contactsSelectors","as","display","flexDirection","alignItems","width","border","borderColor","p","borderRadius","map","index","mb","justifyContent","bg","boxShadow","rounded","_last","_hover","background","color","fontWeight","phone","onClick","id","Filter","dispatch","useDispatch","fontSize","type","value","onChange","e","setFilter","target","ContactForm","useAddContactMutation","addContact","useGetContactsQuery","handleSubmit","preventDefault","elements","mobile","form","currentTarget","toast","some","reset","ml","mr","onSubmit","placeholder","pattern","title","PhoneBook","isLoading","textAlign","length","Box","chakra","displayName","Square","forwardRef","props","ref","size","centerContent","rest","styles","jsx","boxSize","__css","flexShrink","flexGrow"],"sourceRoot":""}