{"version":3,"file":"static/js/176.5fbf9bdb.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","pages/PhoneBook.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectItems = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector([selectFilter,selectItems], (filter,contacts) => {\n    \n  if (filter === '') \n    return contacts;\n    \n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter)\n  );\n});\n  ","import { useDispatch, useSelector } from 'react-redux';\n\nimport * as contactsSelectors from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Box, Button, Text } from '@chakra-ui/react';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n\n  const filteredContacts = useSelector(\n    contactsSelectors.selectFilteredContacts\n  );\n\n  return (\n    <Box as=\"ul\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n      <Box\n        width=\"300px\"\n        border=\"1px\"\n        borderColor=\"black\"\n        p={5}\n        borderRadius={4}\n      >\n        {filteredContacts.map((contact, index) => (\n          <Box\n            as=\"li\"\n            mb={4}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            bg=\"lightblue\"\n            p={2}\n            borderRadius={20}\n            boxShadow=\"dark-lg\"\n            rounded=\"md\"\n            _last={{\n              mb: 0,\n            }}\n            _hover={{\n              background: 'white',\n              color: 'teal.500',\n            }}\n            key={contact.id}\n          >\n            <Text fontWeight={500}>\n              {contact.name} {contact.phone}\n            </Text>\n            <Button\n              borderRadius=\"4\"\n              border=\"1px\"\n              borderColor=\"gray.500\"\n              _hover={{ background: 'teal' }}\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              Delete\n            </Button>\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nimport { setFilter } from 'redux/filterSlice';\nimport { Text, Box } from '@chakra-ui/react';\n\nexport function Filter() {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mb={8}>\n      <Text as=\"label\" fontSize={20} fontWeight=\"500\" display=\"box\" mb={4}>\n        Find contacts by name\n      </Text>\n      <Text\n        as=\"input\"\n        p={1}\n        border=\"1px\"\n        borderRadius={4}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </Box>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport * as contactsOperations from '../../redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\nimport { selectItems } from 'redux/contacts/selectors';\nimport { Button, Box, Text } from '@chakra-ui/react';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [mobile, setMobile] = useState('');\n  const contacts = useSelector(selectItems);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    //const {name, mobile} = e.target.elements;\n    const isInList = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isInList) {\n      toast.error('Контакт уже есть в списке');\n      setName('');\n      setMobile('');\n      return;\n    }\n\n    dispatch(contactsOperations.addContact({ name: name, number: mobile }));\n\n    setName('');\n    setMobile('');\n  };\n\n  return (\n    <Box\n      p=\"15px\"\n      border=\"1px\"\n      borderColor=\"gray.500\"\n      borderRadius=\"4\"\n      width=\"300px\"\n      ml=\"auto\"\n      mr=\"auto\"\n      mb={4}\n    >\n      <form onSubmit={handleSubmit}>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <Text as=\"label\" fontSize={20} fontWeight=\"500\">\n            Name\n            <Text\n              as=\"input\"\n              p={2}\n              placeholder=\"John Smith\"\n              border=\"1px\"\n              borderRadius={4}\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              onChange={e => setName(e.target.value)}\n            />\n          </Text>\n\n          <Text as=\"label\" fontSize={20} fontWeight=\"500\">\n            Number\n            <Text\n              as=\"input\"\n              p={2}\n              placeholder=\"112-15-841\"\n              border=\"1px\"\n              borderRadius={4}\n              name=\"mobile\"\n              type=\"tel\"\n              value={mobile}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              onChange={e => setMobile(e.target.value)}\n            />\n          </Text>\n          <br />\n          <Button\n            borderRadius=\"4\"\n            border=\"1px\"\n            borderColor=\"gray.500\"\n            _hover={{ background: 'teal' }}\n            type=\"submit\"\n          >\n            Add contact\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n}\n","import { ContactList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectItems, selectIsLoading } from 'redux/contacts/selectors';\nimport * as contactsOperations from '../redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Text } from '@chakra-ui/react';\n\nexport default function PhoneBook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectItems);\n\n  return (\n    <>\n      <section>\n        <Text fontSize=\"28\" textAlign=\"center\" mb={5}>\n          PhoneBook\n        </Text>\n        <ContactForm />\n      </section>\n      <section>\n        <Text fontSize=\"28\" textAlign=\"center\" mb={5}>\n          Contacts\n        </Text>\n        {isLoading && <b>Request in progress...</b>}\n        {contacts?.length > 0 && (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        )}\n      </section>\n    </>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectItems","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectFilteredContacts","normalizedFilter","toLowerCase","contact","includes","ContactList","dispatch","useDispatch","filteredContacts","useSelector","contactsSelectors","as","display","flexDirection","alignItems","width","border","borderColor","p","borderRadius","index","mb","justifyContent","bg","boxShadow","rounded","_last","_hover","background","color","fontWeight","phone","onClick","deleteContact","id","Filter","fontSize","type","onChange","e","setFilter","target","ContactForm","useState","setName","mobile","setMobile","ml","mr","onSubmit","preventDefault","some","toast","contactsOperations","number","placeholder","pattern","title","PhoneBook","useEffect","textAlign"],"sourceRoot":""}